name: Release Charts
concurrency: release-charts
on:
  push:
    branches:
      - main
    paths:
      - 'charts/**'

jobs:
  release:
    name: Release Charts
    runs-on: ubuntu-latest
    steps:
      # checkout
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      # setup helm
      - uses: azure/setup-helm@v3.5
        with:
          version: v3.8.1

      # setup taskfile
      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # setup cache for social cards
      - uses: actions/cache@v4
        with:
          key: ${{ github.ref }}
          path: .cache

      # configure git
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # add helm repositories and update dependencies
      - name: Add Helm repositories and update dependencies
        run: |
          for dir in charts/*/; do
            if [[ -f "$dir/Chart.yaml" ]]; then
              echo "Processing chart in $dir"
              if [[ -f "$dir/Chart.lock" ]]; then
                helm dependency update "$dir"
              fi
            fi
          done

      # deploy charts to github pages
      - uses: helm/chart-releaser-action@v1.7.0
        id: cr
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CR_GENERATE_RELEASE_NOTES: true
          CR_SKIP_EXISTING: true

      # setup access to container registry
      - uses: docker/login-action@v3
        if: ${{ steps.cr.outputs.changed_charts }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # push charts to container registry
      - name: Push charts to container registry
        if: ${{ steps.cr.outputs.changed_charts }}
        run: |
          for CHART in .cr-release-packages/*; do
            if [ -z "${CHART:-}" ]; then break; fi
            helm push "${CHART}" oci://ghcr.io/${{ github.repository }}
          done

      # create pages for docs
      - name: Create pages for docs
        run: task docs
        env:
          PROD_DOMAIN: ${{ secrets.PROD_DOMAIN }}

      # deploy docs
      - uses: mhausenblas/mkdocs-deploy-gh-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REQUIREMENTS: docs/requirements.txt