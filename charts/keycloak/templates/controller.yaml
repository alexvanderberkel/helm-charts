{{- if .Values.controller.enabled -}}
apiVersion: apps/v1
kind: {{ include "base.controller.kind" . }}
metadata:
  name: {{ include "keycloak.fullname" . }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
    {{- with .Values.controller.labels }}
    {{ toYaml . | indent 4 }}
    {{- end }}
  {{- with .Values.controller.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.controller.replicas }}
  replicas: {{ .Values.controller.replicas }}
  {{- end }}
  {{- if eq (include "base.controller.kind" . ) "StatefulSet" }}
  serviceName: {{ include "keycloak.fullname" . }}-headless
  {{- end }}
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.controller.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keycloak.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- with .Values.ports.http }}
            {{- if .enabled }}
            - name: http
              containerPort: {{ .port }}
              protocol: {{ default "TCP" .protocol | quote }}
            {{- end }}
            {{- end }}
            {{- with .Values.ports.metrics }}
            {{- if .enabled }}
            - name: metrics
              containerPort: {{ .port }}
              protocol: {{ default "TCP" .protocol | quote }}
            {{- end }}
            {{- end }}
          env:
            {{- range $i, $val := .Values.env }}
            {{- if $val.value }}
            - name: {{ $val.name | quote }}
              value: {{ $val.value | quote }}
            {{- else if $val.valueFrom }}
            - name: {{ $val.name | quote }}
              valueFrom:
                {{- toYaml $val.valueFrom | nindent 16 }}
            {{- end }}
            {{- end }}
            {{- if or .Values.secret.create (not (empty .Values.secret.existingSecret)) }}
            {{- range $key, $val := .Values.secret.values }}
            {{- if and $key $val }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                {{- if $.Values.secret.existingSecret }}
                  name: {{ $.Values.secret.existingSecret }}
                {{- else }}
                  name: {{ printf "%s-secrets" (include "keycloak.fullname" $ ) }}
                {{- end }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{- end }}
            - name: KC_METRICS_ENABLED
              value: 'true'
            - name: KC_HEALTH_ENABLED
              value: 'true'
          args: {{ if not .Values.extraArgs -}}[]{{- end }}
            {{- range $i, $val := .Values.extraArgs }}
            - {{ $val }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: metrics
          readinessProbe:
            httpGet:
              path: /health/ready
              port: metrics
          resources: {{ if not .Values.resources -}}{}{{- end }}
            {{- if .Values.resources }}
            {{- toYaml .Values.resources | nindent 12 }}
            {{- end }}
      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
{{- end }}
