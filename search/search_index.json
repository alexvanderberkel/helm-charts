{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>helm</code>-charts","text":"<p>Another repository with lightweight Helm Charts.</p> <p> </p> <p></p>"},{"location":"#usage","title":"Usage","text":"<p>Helm must be installed to use the charts. Please refer to Helm's documentation to get started. Once Helm has been set up correctly, add the repo as follows:</p> <pre><code>helm repo add alexvanderberkel https://charts.esseling.photos\n</code></pre> <p>If you had already added this repo earlier, run <code>helm repo update</code> to retrieve the latest versions of the packages. Use <code>helm search repo alexvanderberkel</code> to see a list of all available charts.</p> <p>You can install a chart release using the following command:</p> <pre><code>helm install &lt;release&gt; alexvanderberkel/&lt;chart&gt; --values values.yaml\n</code></pre> <p>To uninstall a chart release use <code>helm</code>'s delete command:</p> <pre><code>helm delete &lt;chart&gt;\n</code></pre>"},{"location":"#charts","title":"Charts","text":"<ul> <li><code>paperless</code></li> <li><code>redis</code></li> <li>'fritzbox-exporter'</li> </ul>"},{"location":"#contributors","title":"Contributors","text":"<p>Thanks goes to these wonderful people (emoji key):</p> <sub>Johannes Kastl</sub>\ud83d\udcbb \ud83d\udcd6 <sub>Catriel M\u00fcller</sub>\ud83d\udcbb <sub>Jake(Jaehak Song)</sub>\ud83d\udcbb <sub>Jens Rabe</sub>\ud83e\udd14 <sub>Dzeri96</sub>\ud83d\udcbb <sub>Zoltan Kalmar</sub>\ud83d\udc1b <sub>Christian Erhardt</sub>\ud83d\udcbb <sub>MaxenceG2M</sub>\ud83d\udcbb <sub>Yannig</sub>\ud83d\udcbb <sub>Diego OJeda (BinBash)</sub>\ud83d\udcbb <sub>Fran R</sub>\ud83d\udcbb <p>This project follows the all-contributors specification. Contributions of any kind welcome!</p>"},{"location":"#license","title":"License","text":"<p>MIT \u2013 \u00a9 2025 Alex Esseling</p>"},{"location":"LICENSE/","title":"The MIT License","text":"<p>Copyright 2022 Alex Esseling, https://esseling.photos</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"charts/base/","title":"<code>base</code>","text":"<p>A Helm chart for Kubernetes</p> <p> </p> <ul> <li>https://github.com/alexvanderberkel/helm-charts</li> </ul>"},{"location":"charts/base/#requirements","title":"Requirements","text":"<ul> <li><code>helm</code> - Refer to their docs to get started.</li> </ul>"},{"location":"charts/base/#usage","title":"Usage","text":"<p>Note: This chart is a library chart which can not be used directly.</p>"},{"location":"charts/base/#values","title":"Values","text":"<p>The following values can be used to adjust the helm chart.</p> Key Type Default Description"},{"location":"charts/base/#maintainers","title":"Maintainers","text":"Name Email Url alexvanderberkel alex@alex-esseling.de https://esseling.photos"},{"location":"charts/base/#license","title":"License","text":"<p>MIT \u2013 \u00a9 2024 Alex Esseling</p>"},{"location":"charts/fritzbox-exporter/","title":"<code>fritzbox-exporter</code>","text":"<p>A Helm chart for fritzbox-exporter</p> <p> </p> <ul> <li>https://github.com/alexvanderberkel/helm-charts</li> <li>https://git.r3ktm8.de/SeaLife-Docker/fritzbox_exporter</li> </ul>"},{"location":"charts/fritzbox-exporter/#requirements","title":"Requirements","text":"<ul> <li><code>helm</code> - Refer to their docs to get started.</li> </ul>"},{"location":"charts/fritzbox-exporter/#usage","title":"Usage","text":"<p>To use this chart add the repo as follows:</p> <pre><code>helm repo add alexvanderberkel https://charts.esseling.photos\n</code></pre> <p>If you had already added this repo earlier, run <code>helm repo update</code> to retrieve the latest versions of the packages.</p> <p>To install this chart simply run the following command:</p> <pre><code>helm install fritzbox-exporter alexvanderberkel/fritzbox-exporter\n</code></pre> <p>To uninstall this chart simply run the following command:</p> <pre><code>helm delete fritzbox-exporter\n</code></pre>"},{"location":"charts/fritzbox-exporter/#values","title":"Values","text":"<p>The following values can be used to adjust the helm chart.</p> Key Type Default Description controller.annotations object <code>{}</code> Additional annotations for the controller object. controller.enabled bool <code>true</code> Create a workload for this chart. controller.kind string <code>\"Deployment\"</code> Type of the workload object. controller.labels object <code>{}</code> Additional labels for the controller object. controller.replicas int <code>1</code> The number of replicas. env[0] object <code>{\"name\":\"TZ\",\"value\":\"UTC\"}</code> Timezone for the container. fullnameOverride string <code>\"\"</code> image.pullPolicy string <code>\"IfNotPresent\"</code> The pull policy for the controller. image.repository string <code>\"sealife/fritzbox-exporter\"</code> The repository to pull the image from. image.tag string <code>.Chart.AppVersion</code> The docker tag, if left empty chart's appVersion will be used. nameOverride string <code>\"\"</code> ports.metrics.enabled bool <code>true</code> Enable the port inside the <code>controller</code> and <code>Service</code> objects. ports.metrics.port int <code>8765</code> The port used as internal port and cluster-wide port if <code>.service.type</code> == <code>ClusterIP</code>. ports.metrics.protocol string <code>\"TCP\"</code> The protocol used for the service. resources object <code>{}</code> Compute resources used by the container. More info here. service.annotations object <code>{}</code> Additional annotations for the service object. service.enabled bool <code>true</code> Create a service for exposing this chart. service.labels object <code>{}</code> Additional labels for the service object. service.type string <code>\"ClusterIP\"</code> The service type used. serviceAccount.name string <code>\"\"</code> Specify the service account used for the controller. serviceMonitor.annotations object <code>{}</code> Additional annotations for the service monitor object. serviceMonitor.enabled bool <code>true</code> Create a service monitor for prometheus operator. serviceMonitor.interval string <code>\"30s\"</code> How frequently the exporter should be scraped. serviceMonitor.labels object <code>{}</code> Additional labels for the service monitor object. serviceMonitor.timeout string <code>\"10s\"</code> Timeout value for individual scrapes."},{"location":"charts/fritzbox-exporter/#maintainers","title":"Maintainers","text":"Name Email Url alexvanderberkel alex@alex-esseling.de https://esseling.photos"},{"location":"charts/fritzbox-exporter/#license","title":"License","text":"<p>MIT \u2013 \u00a9 2025 Alex Esseling](https://esseling.photos)</p>"},{"location":"charts/redis/","title":"Redis","text":"<p>Redis is an advanced key-value cache and store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets, sorted sets, bitmaps and hyperloglogs.</p>"},{"location":"charts/redis/#tldr","title":"TL;DR","text":"<pre><code>helm repo add dandydev https://dandydeveloper.github.io/charts\nhelm install dandydev/redis-ha\n</code></pre> <p>By default this chart install 3 pods total:</p> <ul> <li>one pod containing a redis master and sentinel container (optional prometheus metrics exporter sidecar available)</li> <li>two pods each containing a redis slave and sentinel containers (optional prometheus metrics exporter sidecars available)</li> </ul>"},{"location":"charts/redis/#introduction","title":"Introduction","text":"<p>This chart bootstraps a Redis highly available master/slave statefulset in a Kubernetes cluster using the Helm package manager.</p>"},{"location":"charts/redis/#prerequisites","title":"Prerequisites","text":"<ul> <li>Kubernetes 1.8+ with Beta APIs enabled</li> <li>PV provisioner support in the underlying infrastructure</li> <li>Helm v3+</li> </ul>"},{"location":"charts/redis/#upgrading-the-chart","title":"Upgrading the Chart","text":"<p>Please note that there have been a number of changes simplifying the redis management strategy (for better failover and elections) in the 3.x version of this chart. These changes allow the use of official redis images that do not require special RBAC or ServiceAccount roles. As a result when upgrading from version &gt;=2.0.1 to &gt;=3.0.0 of this chart, <code>Role</code>, <code>RoleBinding</code>, and <code>ServiceAccount</code> resources should be deleted manually.</p>"},{"location":"charts/redis/#upgrading-the-chart-from-3x-to-4x","title":"Upgrading the chart from 3.x to 4.x","text":"<p>Starting from version <code>4.x</code> HAProxy sidecar prometheus-exporter removed and replaced by the embedded HAProxy metrics endpoint, as a result when upgrading from version 3.x to 4.x section <code>haproxy.exporter</code> should be removed and the <code>haproxy.metrics</code> need to be configured for fit your needs.</p>"},{"location":"charts/redis/#installing-the-chart","title":"Installing the Chart","text":"<p>To install the chart</p> <pre><code>helm repo add dandydev https://dandydeveloper.github.io/charts\nhelm install dandydev/redis-ha\n</code></pre> <p>The command deploys Redis on the Kubernetes cluster in the default configuration. By default this chart install one master pod containing redis master container and sentinel container along with 2 redis slave pods each containing their own sentinel sidecars. The configuration section lists the parameters that can be configured during installation.</p> <p>Tip: List all releases using <code>helm list</code></p>"},{"location":"charts/redis/#uninstalling-the-chart","title":"Uninstalling the Chart","text":"<p>To uninstall/delete the deployment:</p> <pre><code>helm delete &lt;chart-name&gt;\n</code></pre> <p>The command removes all the Kubernetes components associated with the chart and deletes the release.</p>"},{"location":"charts/redis/#configuration","title":"Configuration","text":"<p>The following table lists the configurable parameters of the Redis chart and their default values.</p>"},{"location":"charts/redis/#general-parameters","title":"General parameters","text":"Parameter Description Type Default <code>additionalAffinities</code> Additional affinities to add to the Redis server pods. # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity object <code>{}</code> <code>affinity</code> Override all other affinity settings for the Redis server pods with a string. string <code>\"\"</code> <code>auth</code> Configures redis with AUTH (requirepass &amp; masterauth conf params) bool <code>false</code> <code>authKey</code> Defines the key holding the redis password in existing secret. string <code>\"auth\"</code> <code>authSecretAnnotations</code> Annotations for auth secret object <code>{}</code> <code>configmap.labels</code> Custom labels for the redis configmap object <code>{}</code> <code>configmapTest.image</code> Image for redis-ha-configmap-test hook object <code>{\"repository\":\"koalaman/shellcheck\",\"tag\":\"v0.10.0\"}</code> <code>configmapTest.image.repository</code> Repository of the configmap shellcheck test image. string <code>\"koalaman/shellcheck\"</code> <code>configmapTest.image.tag</code> Tag of the configmap shellcheck test image. string <code>\"v0.10.0\"</code> <code>configmapTest.resources</code> Resources for the ConfigMap test pod object <code>{}</code> <code>containerSecurityContext</code> Security context to be added to the Redis containers. object <code>{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"runAsNonRoot\":true,\"runAsUser\":1000,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}}</code> <code>emptyDir</code> Configuration of <code>emptyDir</code>, used only if persistentVolume is disabled and no hostPath specified object <code>{}</code> <code>existingSecret</code> An existing secret containing a key defined by <code>authKey</code> that configures <code>requirepass</code> and <code>masterauth</code> in the conf parameters (Requires <code>auth: enabled</code>, cannot be used in conjunction with <code>.Values.redisPassword</code>) string <code>nil</code> <code>extraContainers</code> Extra containers to include in StatefulSet list <code>[]</code> <code>extraInitContainers</code> Extra init containers to include in StatefulSet list <code>[]</code> <code>extraLabels</code> Labels added here are applied to all created resources object <code>{}</code> <code>extraVolumes</code> Extra volumes to include in StatefulSet list <code>[]</code> <code>fullnameOverride</code> Full name of the Redis HA Resources string <code>\"\"</code> <code>global.compatibility</code> Openshift compatibility options object <code>{\"openshift\":{\"adaptSecurityContext\":\"auto\"}}</code> <code>global.priorityClassName</code> Default priority class for all components string <code>\"\"</code> <code>hardAntiAffinity</code> Whether the Redis server pods should be forced to run on separate nodes. # This is accomplished by setting their AntiAffinity with requiredDuringSchedulingIgnoredDuringExecution as opposed to preferred. # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity-beta-feature bool <code>true</code> <code>hostPath.chown</code> if chown is true, an init-container with root permissions is launched to change the owner of the hostPath folder to the user defined in the security context bool <code>true</code> <code>hostPath.path</code> Use this path on the host for data storage. path is evaluated as template so placeholders are replaced string <code>\"\"</code> <code>image.pullPolicy</code> Redis image pull policy string <code>\"IfNotPresent\"</code> <code>image.repository</code> Redis image repository string <code>\"public.ecr.aws/docker/library/redis\"</code> <code>image.tag</code> Redis image tag string <code>\"8.2.1-alpine\"</code> <code>imagePullSecrets</code> Reference to one or more secrets to be used when pulling redis images list <code>[]</code> <code>init.resources</code> Extra init resources object <code>{}</code> <code>labels</code> Custom labels for the redis pod object <code>{}</code> <code>nameOverride</code> Name override for Redis HA resources string <code>\"\"</code> <code>networkPolicy.annotations</code> Annotations for NetworkPolicy object <code>{}</code> <code>networkPolicy.egressRules</code> user can define egress rules too, uses the same structure as ingressRules list <code>[{\"ports\":[{\"port\":53,\"protocol\":\"UDP\"},{\"port\":53,\"protocol\":\"TCP\"}],\"selectors\":[{\"namespaceSelector\":{}},{\"ipBlock\":{\"cidr\":\"169.254.0.0/16\"}}]}]</code> <code>networkPolicy.egressRules[0].selectors[0]</code> Allow all destinations for DNS traffic object <code>{\"namespaceSelector\":{}}</code> <code>networkPolicy.enabled</code> whether NetworkPolicy for Redis StatefulSets should be created. when enabled, inter-Redis connectivity is created bool <code>false</code> <code>networkPolicy.ingressRules</code> User defined ingress rules that Redis should permit into. Uses the format defined in https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors list <code>[]</code> <code>networkPolicy.labels</code> Labels for NetworkPolicy object <code>{}</code> <code>nodeSelector</code> Node labels for pod assignment object <code>{}</code> <code>persistentVolume.accessModes</code> Persistent volume access modes list <code>[\"ReadWriteOnce\"]</code> <code>persistentVolume.annotations</code> Annotations for the volume object <code>{}</code> <code>persistentVolume.enabled</code> Enable persistent volume bool <code>true</code> <code>persistentVolume.labels</code> Labels for the volume object <code>{}</code> <code>persistentVolume.size</code> Persistent volume size string <code>\"10Gi\"</code> <code>persistentVolume.storageClass</code> redis-ha data Persistent Volume Storage Class string <code>nil</code> <code>podDisruptionBudget</code> Pod Disruption Budget rules object <code>{}</code> <code>podManagementPolicy</code> The statefulset pod management policy string <code>\"OrderedReady\"</code> <code>priorityClassName</code> Kubernetes priorityClass name for the redis-ha-server pod string <code>\"\"</code> <code>rbac.create</code> Create and use RBAC resources bool <code>true</code> <code>redis.annotations</code> Annotations for the redis statefulset object <code>{}</code> <code>redis.authClients</code> It is possible to disable client side certificates authentication when \"authClients\" is set to \"no\" string <code>\"\"</code> <code>redis.config</code> Any valid redis config options in this section will be applied to each server, For multi-value configs use list instead of string (for example loadmodule) (see below) object see values.yaml <code>redis.config.maxmemory</code> Max memory to use for each redis instance. Default is unlimited. string <code>\"0\"</code> <code>redis.config.maxmemory-policy</code> Max memory policy to use for each redis instance. Default is volatile-lru. string <code>\"volatile-lru\"</code> <code>redis.config.min-replicas-max-lag</code> Value in seconds int <code>5</code> <code>redis.config.repl-diskless-sync</code> When enabled, directly sends the RDB over the wire to slaves, without using the disk as intermediate storage. Default is false. string <code>\"yes\"</code> <code>redis.config.save</code> Please note that local (on-disk) RDBs will still be created when re-syncing with a new slave. The only way to prevent this is to enable diskless replication. string <code>\"900 1\"</code> <code>redis.customArgs</code> Allows overriding the redis container arguments list <code>[]</code> <code>redis.customCommand</code> Allows overriding the redis container command list <code>[]</code> <code>redis.customConfig</code> Allows for custom redis.conf files to be applied. If this is used then <code>redis.config</code> is ignored string <code>nil</code> <code>redis.disableCommands</code> Array with commands to disable list <code>[\"FLUSHDB\",\"FLUSHALL\"]</code> <code>redis.envFrom</code> Load environment variables from ConfigMap/Secret list <code>[]</code> <code>redis.extraVolumeMounts</code> additional volumeMounts for Redis container list <code>[]</code> <code>redis.lifecycle</code> Container Lifecycle Hooks for redis container Ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/ object see values.yaml <code>redis.livenessProbe</code> Liveness probe parameters for redis container object <code>{\"enabled\":true,\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":15}</code> <code>redis.livenessProbe.enabled</code> Enable the Liveness Probe bool <code>true</code> <code>redis.livenessProbe.failureThreshold</code> Failure threshold for liveness probe int <code>5</code> <code>redis.livenessProbe.initialDelaySeconds</code> Initial delay in seconds for liveness probe int <code>30</code> <code>redis.livenessProbe.periodSeconds</code> Period in seconds after which liveness probe will be repeated int <code>15</code> <code>redis.livenessProbe.successThreshold</code> Success threshold for liveness probe int <code>1</code> <code>redis.livenessProbe.timeoutSeconds</code> Timeout seconds for liveness probe int <code>15</code> <code>redis.masterGroupName</code> Redis convention for naming the cluster group: must match <code>^[\\\\w-\\\\.]+$</code> and can be templated string <code>\"mymaster\"</code> <code>redis.podAnnotations</code> Annotations to be added to the redis statefulset pods object <code>{}</code> <code>redis.port</code> Port to access the redis service int <code>6379</code> <code>redis.readinessProbe</code> Readiness probe parameters for redis container object <code>{\"enabled\":true,\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":15}</code> <code>redis.readinessProbe.enabled</code> Enable the Readiness Probe bool <code>true</code> <code>redis.readinessProbe.failureThreshold</code> Failure threshold for readiness probe int <code>5</code> <code>redis.readinessProbe.initialDelaySeconds</code> Initial delay in seconds for readiness probe int <code>30</code> <code>redis.readinessProbe.periodSeconds</code> Period in seconds after which readiness probe will be repeated int <code>15</code> <code>redis.readinessProbe.successThreshold</code> Success threshold for readiness probe int <code>1</code> <code>redis.readinessProbe.timeoutSeconds</code> Timeout seconds for readiness probe int <code>15</code> <code>redis.resources</code> CPU/Memory for master/slave nodes resource requests/limits object <code>{}</code> <code>redis.startupProbe</code> Startup probe parameters for redis container object <code>{\"enabled\":true,\"failureThreshold\":5,\"initialDelaySeconds\":30,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":15}</code> <code>redis.startupProbe.enabled</code> Enable Startup Probe bool <code>true</code> <code>redis.startupProbe.failureThreshold</code> Failure threshold for startup probe int <code>5</code> <code>redis.startupProbe.initialDelaySeconds</code> Initial delay in seconds for startup probe int <code>30</code> <code>redis.startupProbe.periodSeconds</code> Period in seconds after which startup probe will be repeated int <code>15</code> <code>redis.startupProbe.successThreshold</code> Success threshold for startup probe int <code>1</code> <code>redis.startupProbe.timeoutSeconds</code> Timeout seconds for startup probe int <code>15</code> <code>redis.terminationGracePeriodSeconds</code> Increase terminationGracePeriodSeconds to allow writing large RDB snapshots. (k8s default is 30s) ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination-forced int <code>60</code> <code>redis.tlsPort</code> TLS Port to access the redis service int <code>nil</code> <code>redis.tlsReplication</code> Configures redis with tls-replication parameter, if true sets \"tls-replication yes\" in redis.conf bool <code>nil</code> <code>redis.updateStrategy</code> Update strategy for Redis StatefulSet # ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies object <code>{\"type\":\"RollingUpdate\"}</code> <code>redisPassword</code> A password that configures a <code>requirepass</code> and <code>masterauth</code> in the conf parameters (Requires <code>auth: enabled</code>) string <code>nil</code> <code>replicas</code> Number of redis master/slave int <code>3</code> <code>restore.existingSecret</code> Set existingSecret to true to use secret specified in existingSecret above bool <code>false</code> <code>restore.redis.source</code> string <code>\"\"</code> <code>restore.s3.access_key</code> Restore init container - AWS AWS_ACCESS_KEY_ID to access restore.s3.source string <code>\"\"</code> <code>restore.s3.region</code> Restore init container - AWS AWS_REGION to access restore.s3.source string <code>\"\"</code> <code>restore.s3.secret_key</code> Restore init container - AWS AWS_SECRET_ACCESS_KEY to access restore.s3.source string <code>\"\"</code> <code>restore.s3.source</code> Restore init container - AWS S3 location of dump - i.e. s3://bucket/dump.rdb or false string <code>\"\"</code> <code>restore.ssh.key</code> Restore init container - SSH private key to scp restore.ssh.source to init container. Key should be in one line separated with \\n. i.e. <code>-----BEGIN RSA PRIVATE KEY-----\\n...\\n...\\n-----END RSA PRIVATE KEY-----</code> string <code>\"\"</code> <code>restore.ssh.source</code> Restore init container - SSH scp location of dump - i.e. user@server:/path/dump.rdb or false string <code>\"\"</code> <code>restore.timeout</code> Timeout for the restore int <code>600</code> <code>ro_replicas</code> Comma separated list of slaves which never get promoted to be master. Count starts with 0. Allowed values 1-9. i.e. 3,4 - 3th and 4th redis slave never make it to be master, where master is index 0. string <code>\"\"</code> <code>schedulerName</code> Use an alternate scheduler, e.g. \"stork\". ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/ string <code>\"\"</code> <code>securityContext</code> Security context to be added to the Redis StatefulSet. object <code>{\"fsGroup\":1000,\"runAsNonRoot\":true,\"runAsUser\":1000}</code> <code>serviceAccount.annotations</code> Annotations to be added to the service account for the redis statefulset object <code>{}</code> <code>serviceAccount.automountToken</code> opt in/out of automounting API credentials into container. Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/ bool <code>false</code> <code>serviceAccount.create</code> Specifies whether a ServiceAccount should be created bool <code>true</code> <code>serviceAccount.name</code> The name of the ServiceAccount to use. If not set and create is true, a name is generated using the redis-ha.fullname template string <code>\"\"</code> <code>serviceLabels</code> Custom labels for redis service object <code>{}</code> <code>splitBrainDetection.interval</code> Interval between redis sentinel and server split brain checks (in seconds) int <code>60</code> <code>splitBrainDetection.resources</code> splitBrainDetection resources object <code>{}</code> <code>splitBrainDetection.retryInterval</code> int <code>10</code> <code>sysctlImage.command</code> sysctlImage command to execute list <code>[]</code> <code>sysctlImage.enabled</code> Enable an init container to modify Kernel settings bool <code>false</code> <code>sysctlImage.mountHostSys</code> Mount the host <code>/sys</code> folder to <code>/host-sys</code> bool <code>false</code> <code>sysctlImage.pullPolicy</code> sysctlImage Init container pull policy string <code>\"Always\"</code> <code>sysctlImage.registry</code> sysctlImage Init container registry string <code>\"public.ecr.aws/docker/library\"</code> <code>sysctlImage.repository</code> sysctlImage Init container name string <code>\"busybox\"</code> <code>sysctlImage.resources</code> sysctlImage resources object <code>{}</code> <code>sysctlImage.tag</code> sysctlImage Init container tag string <code>\"1.34.1\"</code> <code>tls.caCertFile</code> Name of CA certificate file string <code>\"ca.crt\"</code> <code>tls.certFile</code> Name of certificate file string <code>\"redis.crt\"</code> <code>tls.dhParamsFile</code> Name of Diffie-Hellman (DH) key exchange parameters file (Example: redis.dh) string <code>nil</code> <code>tls.keyFile</code> Name of key file string <code>\"redis.key\"</code> <code>tolerations</code> list <code>[]</code> <code>topologySpreadConstraints.enabled</code> Enable topology spread constraints bool <code>false</code> <code>topologySpreadConstraints.maxSkew</code> Max skew of pods tolerated string <code>\"\"</code> <code>topologySpreadConstraints.topologyKey</code> Topology key for spread constraints string <code>\"\"</code> <code>topologySpreadConstraints.whenUnsatisfiable</code> Enforcement policy, hard or soft string <code>\"\"</code>"},{"location":"charts/redis/#redis-sentinel-parameters","title":"Redis Sentinel parameters","text":"Parameter Description Type Default <code>sentinel.auth</code> Enables or disables sentinel AUTH (Requires <code>sentinel.password</code> to be set) bool <code>false</code> <code>sentinel.authClients</code> It is possible to disable client side certificates authentication when \"authClients\" is set to \"no\" string <code>\"\"</code> <code>sentinel.authKey</code> The key holding the sentinel password in an existing secret. string <code>\"sentinel-password\"</code> <code>sentinel.config</code> Valid sentinel config options in this section will be applied as config options to each sentinel (see below) object see values.yaml <code>sentinel.customArgs</code> list <code>[]</code> <code>sentinel.customCommand</code> list <code>[]</code> <code>sentinel.customConfig</code> Allows for custom sentinel.conf files to be applied. If this is used then <code>sentinel.config</code> is ignored string <code>\"\"</code> <code>sentinel.existingSecret</code> An existing secret containing a key defined by <code>sentinel.authKey</code> that configures <code>requirepass</code> in the conf parameters (Requires <code>sentinel.auth: enabled</code>, cannot be used in conjunction with <code>.Values.sentinel.password</code>) string <code>\"\"</code> <code>sentinel.extraVolumeMounts</code> additional volumeMounts for Sentinel container list <code>[]</code> <code>sentinel.lifecycle</code> Container Lifecycle Hooks for sentinel container. Ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/ object <code>{}</code> <code>sentinel.livenessProbe.enabled</code> bool <code>true</code> <code>sentinel.livenessProbe.failureThreshold</code> Failure threshold for liveness probe int <code>5</code> <code>sentinel.livenessProbe.initialDelaySeconds</code> Initial delay in seconds for liveness probe int <code>30</code> <code>sentinel.livenessProbe.periodSeconds</code> Period in seconds after which liveness probe will be repeated int <code>15</code> <code>sentinel.livenessProbe.successThreshold</code> Success threshold for liveness probe int <code>1</code> <code>sentinel.livenessProbe.timeoutSeconds</code> Timeout seconds for liveness probe int <code>15</code> <code>sentinel.password</code> A password that configures a <code>requirepass</code> in the conf parameters (Requires <code>sentinel.auth: enabled</code>) string <code>nil</code> <code>sentinel.port</code> Port to access the sentinel service int <code>26379</code> <code>sentinel.quorum</code> Minimum number of nodes expected to be live. int <code>2</code> <code>sentinel.readinessProbe.enabled</code> bool <code>true</code> <code>sentinel.readinessProbe.failureThreshold</code> Failure threshold for readiness probe int <code>5</code> <code>sentinel.readinessProbe.initialDelaySeconds</code> Initial delay in seconds for readiness probe int <code>30</code> <code>sentinel.readinessProbe.periodSeconds</code> Period in seconds after which readiness probe will be repeated int <code>15</code> <code>sentinel.readinessProbe.successThreshold</code> Success threshold for readiness probe int <code>3</code> <code>sentinel.readinessProbe.timeoutSeconds</code> Timeout seconds for readiness probe int <code>15</code> <code>sentinel.resources</code> CPU/Memory for sentinel node resource requests/limits object <code>{}</code> <code>sentinel.startupProbe</code> Startup probe parameters for redis container object <code>{\"enabled\":true,\"failureThreshold\":3,\"initialDelaySeconds\":5,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":15}</code> <code>sentinel.startupProbe.enabled</code> Enable Startup Probe bool <code>true</code> <code>sentinel.startupProbe.failureThreshold</code> Failure threshold for startup probe int <code>3</code> <code>sentinel.startupProbe.initialDelaySeconds</code> Initial delay in seconds for startup probe int <code>5</code> <code>sentinel.startupProbe.periodSeconds</code> Period in seconds after which startup probe will be repeated int <code>10</code> <code>sentinel.startupProbe.successThreshold</code> Success threshold for startup probe int <code>1</code> <code>sentinel.startupProbe.timeoutSeconds</code> Timeout seconds for startup probe int <code>15</code> <code>sentinel.tlsPort</code> TLS Port to access the sentinel service int <code>nil</code> <code>sentinel.tlsReplication</code> Configures sentinel with tls-replication parameter, if true sets \"tls-replication yes\" in sentinel.conf bool <code>nil</code>"},{"location":"charts/redis/#haproxy-parameters","title":"HAProxy parameters","text":"Parameter Description Type Default <code>haproxy.IPv6.enabled</code> Enable HAProxy parameters to bind and consume IPv6 addresses. Enabled by default. bool <code>true</code> <code>haproxy.additionalAffinities</code> Additional affinities to add to the haproxy pods. object <code>{}</code> <code>haproxy.affinity</code> Override all other affinity settings for the haproxy pods with a string. string <code>\"\"</code> <code>haproxy.annotations</code> HAProxy template annotations object <code>{}</code> <code>haproxy.checkFall</code> haproxy.cfg <code>check fall</code> setting int <code>1</code> <code>haproxy.checkInterval</code> haproxy.cfg <code>check inter</code> setting string <code>\"1s\"</code> <code>haproxy.containerPort</code> Modify HAProxy deployment container port int <code>6379</code> <code>haproxy.containerSecurityContext</code> Security context to be added to the HAProxy containers. object <code>{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"runAsNonRoot\":true,\"seccompProfile\":{\"type\":\"RuntimeDefault\"}}</code> <code>haproxy.customConfig</code> Allows for custom config-haproxy.cfg file to be applied. If this is used then default config will be overwriten string <code>nil</code> <code>haproxy.deploymentAnnotations</code> HAProxy deployment annotations object <code>{}</code> <code>haproxy.deploymentStrategy</code> Deployment strategy for the haproxy deployment object <code>{\"type\":\"RollingUpdate\"}</code> <code>haproxy.emptyDir</code> Configuration of <code>emptyDir</code> object <code>{}</code> <code>haproxy.enabled</code> Enabled HAProxy LoadBalancing/Proxy bool <code>false</code> <code>haproxy.extraConfig</code> Allows to place any additional configuration section to add to the default config-haproxy.cfg string <code>nil</code> <code>haproxy.hardAntiAffinity</code> Whether the haproxy pods should be forced to run on separate nodes. bool <code>true</code> <code>haproxy.image.pullPolicy</code> HAProxy Image PullPolicy string <code>\"IfNotPresent\"</code> <code>haproxy.image.repository</code> HAProxy Image Repository string <code>\"public.ecr.aws/docker/library/haproxy\"</code> <code>haproxy.image.tag</code> HAProxy Image Tag string <code>\"3.0.8-alpine\"</code> <code>haproxy.imagePullSecrets</code> Reference to one or more secrets to be used when pulling images ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/ list <code>[]</code> <code>haproxy.init.resources</code> Extra init resources object <code>{}</code> <code>haproxy.labels</code> Custom labels for the haproxy pod object <code>{}</code> <code>haproxy.lifecycle</code> Container lifecycle hooks. Ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/ object <code>{}</code> <code>haproxy.metrics.enabled</code> HAProxy enable prometheus metric scraping bool <code>false</code> <code>haproxy.metrics.port</code> HAProxy prometheus metrics scraping port int <code>9101</code> <code>haproxy.metrics.portName</code> HAProxy metrics scraping port name string <code>\"http-exporter-port\"</code> <code>haproxy.metrics.scrapePath</code> HAProxy prometheus metrics scraping path string <code>\"/metrics\"</code> <code>haproxy.metrics.serviceMonitor.disableAPICheck</code> Disable API Check on ServiceMonitor bool <code>false</code> <code>haproxy.metrics.serviceMonitor.enabled</code> When set true then use a ServiceMonitor to configure scraping bool <code>false</code> <code>haproxy.metrics.serviceMonitor.endpointAdditionalProperties</code> Set additional properties for the ServiceMonitor endpoints such as relabeling, scrapeTimeout, tlsConfig, and more. object <code>{}</code> <code>haproxy.metrics.serviceMonitor.interval</code> Set how frequently Prometheus should scrape (default is 30s) string <code>\"\"</code> <code>haproxy.metrics.serviceMonitor.labels</code> Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator object <code>{}</code> <code>haproxy.metrics.serviceMonitor.namespace</code> Set the namespace the ServiceMonitor should be deployed string <code>.Release.Namespace</code> <code>haproxy.metrics.serviceMonitor.telemetryPath</code> Set path to redis-exporter telemtery-path (default is /metrics) string <code>\"\"</code> <code>haproxy.metrics.serviceMonitor.timeout</code> Set timeout for scrape (default is 10s) string <code>\"\"</code> <code>haproxy.networkPolicy.annotations</code> Annotations for Haproxy NetworkPolicy object <code>{}</code> <code>haproxy.networkPolicy.egressRules</code> user can define egress rules too, uses the same structure as ingressRules list <code>[]</code> <code>haproxy.networkPolicy.enabled</code> whether NetworkPolicy for Haproxy should be created bool <code>false</code> <code>haproxy.networkPolicy.ingressRules</code> user defined ingress rules that Haproxy should permit into. uses the format defined in https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors list <code>[]</code> <code>haproxy.networkPolicy.labels</code> Labels for Haproxy NetworkPolicy object <code>{}</code> <code>haproxy.podAnnotations</code> Annotations to be added to the HAProxy deployment pods object <code>{}</code> <code>haproxy.podDisruptionBudget</code> Pod Disruption Budget ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/ object <code>{}</code> <code>haproxy.priorityClassName</code> Kubernetes priorityClass name for the haproxy pod string <code>\"\"</code> <code>haproxy.readOnly</code> Enable read-only redis-slaves object <code>{\"enabled\":false,\"port\":6380}</code> <code>haproxy.readOnly.enabled</code> Enable if you want a dedicated port in haproxy for redis-slaves bool <code>false</code> <code>haproxy.readOnly.port</code> Port for the read-only redis-slaves int <code>6380</code> <code>haproxy.replicas</code> Number of HAProxy instances int <code>3</code> <code>haproxy.resources</code> HAProxy resources object <code>{}</code> <code>haproxy.securityContext</code> Security context to be added to the HAProxy deployment. object <code>{\"fsGroup\":99,\"runAsNonRoot\":true,\"runAsUser\":99}</code> <code>haproxy.service.annotations</code> HAProxy service annotations string <code>nil</code> <code>haproxy.service.externalIPs</code> HAProxy external IPs object <code>{}</code> <code>haproxy.service.externalTrafficPolicy</code> HAProxy service externalTrafficPolicy value (haproxy.service.type must be LoadBalancer) string <code>nil</code> <code>haproxy.service.labels</code> HAProxy service labels object <code>{}</code> <code>haproxy.service.loadBalancerIP</code> HAProxy service loadbalancer IP string <code>nil</code> <code>haproxy.service.loadBalancerSourceRanges</code> List of CIDR's allowed to connect to LoadBalancer list <code>[]</code> <code>haproxy.service.nodePort</code> HAProxy service nodePort value (haproxy.service.type must be NodePort) int <code>nil</code> <code>haproxy.service.type</code> HAProxy service type \"ClusterIP\", \"LoadBalancer\" or \"NodePort\" string <code>\"ClusterIP\"</code> <code>haproxy.serviceAccount.automountToken</code> bool <code>true</code> <code>haproxy.serviceAccount.create</code> Specifies whether a ServiceAccount should be created bool <code>true</code> <code>haproxy.serviceAccountName</code> HAProxy serviceAccountName string <code>\"redis-sa\"</code> <code>haproxy.servicePort</code> Modify HAProxy service port int <code>6379</code> <code>haproxy.stickyBalancing</code> HAProxy sticky load balancing to Redis nodes. Helps with connections shutdown. bool <code>false</code> <code>haproxy.tests.resources</code> Pod resources for the tests against HAProxy. object <code>{}</code> <code>haproxy.timeout.check</code> haproxy.cfg <code>timeout check</code> setting string <code>\"2s\"</code> <code>haproxy.timeout.client</code> haproxy.cfg <code>timeout client</code> setting string <code>\"330s\"</code> <code>haproxy.timeout.connect</code> haproxy.cfg <code>timeout connect</code> setting string <code>\"4s\"</code> <code>haproxy.timeout.server</code> haproxy.cfg <code>timeout server</code> setting string <code>\"330s\"</code> <code>haproxy.tls</code> Enable TLS termination on HAproxy, This will create a volume mount object <code>{\"certMountPath\":\"/tmp/\",\"enabled\":false,\"keyName\":null,\"secretName\":\"\"}</code> <code>haproxy.tls.certMountPath</code> Path to mount the secret that contains the certificates. haproxy string <code>\"/tmp/\"</code> <code>haproxy.tls.enabled</code> If \"true\" this will enable TLS termination on haproxy bool <code>false</code> <code>haproxy.tls.keyName</code> Key file name string <code>nil</code> <code>haproxy.tls.secretName</code> Secret containing the .pem file string <code>\"\"</code>"},{"location":"charts/redis/#prometheus-exporter-parameters","title":"Prometheus exporter parameters","text":"Parameter Description Type Default <code>exporter.address</code> Address/Host for Redis instance. Exists to circumvent issues with IPv6 dns resolution that occurs on certain environments string <code>\"localhost\"</code> <code>exporter.enabled</code> If <code>true</code>, the prometheus exporter sidecar is enabled bool <code>false</code> <code>exporter.extraArgs</code> Additional args for redis exporter object <code>{}</code> <code>exporter.image</code> Exporter image string <code>\"quay.io/oliver006/redis_exporter\"</code> <code>exporter.livenessProbe.httpGet.path</code> Exporter liveness probe httpGet path string <code>\"/metrics\"</code> <code>exporter.livenessProbe.httpGet.port</code> Exporter liveness probe httpGet port int <code>9121</code> <code>exporter.livenessProbe.initialDelaySeconds</code> Initial delay in seconds for liveness probe of exporter int <code>15</code> <code>exporter.livenessProbe.periodSeconds</code> Period in seconds after which liveness probe will be repeated int <code>15</code> <code>exporter.livenessProbe.timeoutSeconds</code> Timeout seconds for liveness probe of exporter int <code>3</code> <code>exporter.port</code> Exporter port int <code>9121</code> <code>exporter.portName</code> Exporter port name string <code>\"exporter-port\"</code> <code>exporter.pullPolicy</code> Exporter image pullPolicy string <code>\"IfNotPresent\"</code> <code>exporter.readinessProbe.httpGet.path</code> Exporter readiness probe httpGet path string <code>\"/metrics\"</code> <code>exporter.readinessProbe.httpGet.port</code> Exporter readiness probe httpGet port int <code>9121</code> <code>exporter.readinessProbe.initialDelaySeconds</code> Initial delay in seconds for readiness probe of exporter int <code>15</code> <code>exporter.readinessProbe.periodSeconds</code> Period in seconds after which readiness probe will be repeated int <code>15</code> <code>exporter.readinessProbe.successThreshold</code> Success threshold for readiness probe of exporter int <code>2</code> <code>exporter.readinessProbe.timeoutSeconds</code> Timeout seconds for readiness probe of exporter int <code>3</code> <code>exporter.resources</code> cpu/memory resource limits/requests object <code>{}</code> <code>exporter.scrapePath</code> Exporter scrape path string <code>\"/metrics\"</code> <code>exporter.script</code> A custom custom Lua script that will be mounted to exporter for collection of custom metrics. Creates a ConfigMap and sets env var <code>REDIS_EXPORTER_SCRIPT</code>. string <code>\"\"</code> <code>exporter.serviceMonitor.disableAPICheck</code> Disable API Check on ServiceMonitor bool <code>false</code> <code>exporter.serviceMonitor.enabled</code> When set true then use a ServiceMonitor to configure scraping bool <code>false</code> <code>exporter.serviceMonitor.endpointAdditionalProperties</code> Set additional properties for the ServiceMonitor endpoints such as relabeling, scrapeTimeout, tlsConfig, and more. object <code>{}</code> <code>exporter.serviceMonitor.interval</code> Set how frequently Prometheus should scrape (default is 30s) string <code>\"\"</code> <code>exporter.serviceMonitor.labels</code> Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator object <code>{}</code> <code>exporter.serviceMonitor.metricRelabelings</code> list <code>[]</code> <code>exporter.serviceMonitor.namespace</code> Set the namespace the ServiceMonitor should be deployed string <code>.Release.Namespace</code> <code>exporter.serviceMonitor.relabelings</code> list <code>[]</code> <code>exporter.serviceMonitor.telemetryPath</code> Set path to redis-exporter telemtery-path (default is /metrics) string <code>\"\"</code> <code>exporter.serviceMonitor.timeout</code> Set timeout for scrape (default is 10s) string <code>\"\"</code> <code>exporter.tag</code> Exporter image tag string <code>\"v1.67.0\"</code> <code>prometheusRule.additionalLabels</code> Additional labels to be set in metadata. object <code>{}</code> <code>prometheusRule.enabled</code> If true, creates a Prometheus Operator PrometheusRule. bool <code>false</code> <code>prometheusRule.interval</code> How often rules in the group are evaluated (falls back to <code>global.evaluation_interval</code> if not set). string <code>\"10s\"</code> <code>prometheusRule.namespace</code> Namespace which Prometheus is running in. string <code>nil</code> <code>prometheusRule.rules</code> Rules spec template (see https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#rule). list <code>[]</code> <p>Specify each parameter using the <code>--set key=value[,key=value]</code> argument to <code>helm install</code>. For example,</p> <pre><code>$ helm repo add dandydev https://dandydeveloper.github.io/charts\n$ helm install \\\n  --set image=redis \\\n  --set tag=5.0.5-alpine \\\n    dandydev/redis-ha\n</code></pre> <p>The above command sets the Redis server within <code>default</code> namespace.</p> <p>Alternatively, a YAML file that specifies the values for the parameters can be provided while installing the chart. For example,</p> <pre><code>helm install -f values.yaml dandydev/redis-ha\n</code></pre> <p>Tip: You can use the default values.yaml</p>"},{"location":"charts/redis/#custom-redis-and-sentinel-config-options","title":"Custom Redis and Sentinel config options","text":"<p>This chart allows for most redis or sentinel config options to be passed as a key value pair through the <code>values.yaml</code> under <code>redis.config</code> and <code>sentinel.config</code>. See links below for all available options.</p> <p>Example redis.conf Example sentinel.conf</p> <p>For example <code>repl-timeout 60</code> would be added to the <code>redis.config</code> section of the <code>values.yaml</code> as:</p> <pre><code>    repl-timeout: \"60\"\n</code></pre> <p>Note:</p> <ol> <li>Some config options should be renamed by redis version\uff0ce.g.:</li> </ol> <pre><code># In redis 5.x\uff0csee https://raw.githubusercontent.com/antirez/redis/5.0/redis.conf\nmin-replicas-to-write: 1\nmin-replicas-max-lag: 5\n\n# In redis 4.x and redis 3.x\uff0csee https://raw.githubusercontent.com/antirez/redis/4.0/redis.conf and https://raw.githubusercontent.com/antirez/redis/3.0/redis.conf\nmin-slaves-to-write 1\nmin-slaves-max-lag 5\n</code></pre> <p>Sentinel options supported must be in the the <code>sentinel &lt;option&gt; &lt;master-group-name&gt; &lt;value&gt;</code> format. For example, <code>sentinel down-after-milliseconds 30000</code> would be added to the <code>sentinel.config</code> section of the <code>values.yaml</code> as:</p> <pre><code>    down-after-milliseconds: 30000\n</code></pre> <p>If more control is needed from either the redis or sentinel config then an entire config can be defined under <code>redis.customConfig</code> or <code>sentinel.customConfig</code>. Please note that these values will override any configuration options under their respective section. For example, if you define <code>sentinel.customConfig</code> then the <code>sentinel.config</code> is ignored.</p>"},{"location":"charts/redis/#host-kernel-settings","title":"Host Kernel Settings","text":"<p>Redis may require some changes in the kernel of the host machine to work as expected, in particular increasing the <code>somaxconn</code> value and disabling transparent huge pages. To do so, you can set up a privileged initContainer with the <code>sysctlImage</code> config values, for example:</p> <pre><code>sysctlImage:\n  enabled: true\n  mountHostSys: true\n  command:\n    - /bin/sh\n    - -xc\n    - |-\n      sysctl -w net.core.somaxconn=10000\n      echo never &gt; /host-sys/kernel/mm/transparent_hugepage/enabled\n</code></pre>"},{"location":"charts/redis/#haproxy-startup","title":"HAProxy startup","text":"<p>When HAProxy is enabled, it will attempt to connect to each announce-service of each redis replica instance in its init container before starting. It will fail if announce-service IP is not available fast enough (10 seconds max by announce-service). A such case could happen if the orchestator is pending the nomination of redis pods. Risk is limited because announce-service is using <code>publishNotReadyAddresses: true</code>, although, in such case, HAProxy pod will be rescheduled afterward by the orchestrator.</p> <p>PodDisruptionBudgets are not configured by default, you may need to set the <code>haproxy.podDisruptionBudget</code> parameter in values.yaml to enable it.</p>"},{"location":"charts/redis/#network-policies","title":"Network policies","text":"<p>If <code>networkPolicy.enabled</code> is set to <code>true</code>, then a <code>NetworkPolicy</code> resource is created with default rules to allow inter-Redis and Sentinel connectivity. This is a requirement for Redis Pods to come up successfully.</p> <p>You will need to define <code>ingressRules</code> to permit your application connectivity to Redis. The <code>selectors</code> block should be in the format of a label selector. Templating is also supported in the selectors. See such a configuration below.</p> <pre><code>networkPolicy: true\n  ingressRules:\n    - selectors:\n      - namespaceSelector:\n          matchLabels:\n            name: my-redis-client-namespace\n        podSelector:\n          matchLabels:\n            # template example\n            app: |-\n              {{- .App.Name }}\n      ## ports block is optional (defaults to below), define the block to override the defaults\n      # ports:\n      #   - port: 6379\n      #     protocol: TCP\n      #   - port: 26379\n      #     protocol: TCP\n</code></pre> <p>Should your Pod require additional egress rules, define them in a <code>egressRules</code> key which is structured identically to an <code>ingressRules</code> key.</p>"},{"location":"charts/redis/#sentinel-and-redis-server-split-brain-detection","title":"Sentinel and redis server split brain detection","text":"<p>Under not entirely known yet circumstances redis sentinel and its corresponding redis server reach a condition that this chart authors call \"split brain\" (for short). The observed behaviour is the following: the sentinel switches to the new re-elected master, but does not switch its redis server. Majority of original discussion on the problem has happened at the #121.</p> <p>The proposed solution is currently implemented as a sidecar container that runs a bash script with the following logic:</p> <ol> <li>At intervals defined by splitBrainDetection.interval, the sidecar checks which node is recognized as master by Sentinel.</li> <li>If the current pod is the master according to Sentinel, it verifies that the local Redis server is also running as master.</li> <li>If the current pod is not the master, it ensures the local Redis server is replicating from the correct master node.</li> <li>If any of these checks fail, the sidecar will retry the check at intervals defined by splitBrainDetection.retryInterval.</li> <li>If the checks continue to fail after the retry attempts, the sidecar triggers a reinitialization: it regenerates the Redis configuration and instructs the Redis server to shut down. Kubernetes will then automatically restart the container.</li> </ol>"},{"location":"charts/redis/#change-log","title":"Change Log","text":""},{"location":"charts/redis/#4149-potential-breaking-change","title":"4.14.9 - ** POTENTIAL BREAKING CHANGE. **","text":"<p>Introduced the ability to change the Haproxy Deployment container pod - Container port in redis-haproxy-deployment.yam has been changed. Was redis.port To haproxy.containerPort. Default value is 6379. - Port in redis-haproxy-service.yaml has been changed. Was redis.port To haproxy.servicePort. Default value is 6379.</p>"},{"location":"charts/redis/#4210-breaking-changes-kubernetes-deprecation","title":"4.21.0 - BREAKING CHANGES (Kubernetes Deprecation)","text":"<p>This version introduced the deprecation of the PSP and subsequently added fields to the securityContexts that were introduced in Kubernetes v1.19:</p> <p>https://kubernetes.io/docs/tutorials/security/seccomp/</p> <p>As a result, from this version onwards Kubernetes versions older than 1.19 will fail to install without the removal of <code>.Values.containerSecurityContext.seccompProfile</code> and <code>.Values.haproxy.containerSecurityContext.seccompProfile</code> (If HAProxy is enabled)</p> <p>Autogenerated from chart metadata using helm-docs</p>"}]}